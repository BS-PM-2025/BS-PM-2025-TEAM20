"""
Django settings for djangoProject11 project.
Generated by 'django-admin startproject' using Django 5.2.
"""

import os
import sys
from pathlib import Path

# טעינה ידנית של backend ה-mssql - הכרחי לעבודה עם Jenkins
try:
    import django_mssql.backend.base
except ImportError:
    pass  # יתבצע טיפול בהמשך אם החבילה לא מותקנת

BASE_DIR = Path(__file__).resolve().parent.parent

SECRET_KEY = 'your-secret-key-here'  # החלף במפתח אמיתי

DEBUG = True

ALLOWED_HOSTS = ['*']

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    # האפליקציות שלך כאן
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'djangoProject11.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'djangoProject11.wsgi.application'

# הגדרות מסד הנתונים - הגרסה שעובדת עם mssql
DATABASES = {
    'default': {
        'ENGINE': 'mssql',
        'NAME': 'App',
        'USER': 'sa',
        'PASSWORD': 'Naghm@2004',
        'HOST': '192.168.56.1',
        'PORT': '1433',
        'OPTIONS': {
            'driver': 'ODBC Driver 17 for SQL Server',
            'unicode_results': True,
            'extra_params': 'TrustServerCertificate=yes',
            'host_is_server': True,  # חשוב עבור חיבורים מרוחקים
        },
    }
}

# וודא שה-backend זמין
if 'mssql' not in DATABASES['default']['ENGINE']:
    sys.stderr.write("⚠️ Warning: MSSQL backend not configured properly\n")

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

LANGUAGE_CODE = 'he'  # לעברית
TIME_ZONE = 'Asia/Jerusalem'
USE_I18N = True
USE_TZ = True

STATIC_URL = 'static/'
STATIC_ROOT = BASE_DIR / 'staticfiles'

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# טיפול בבעיות timezone עבור SQL Server
if DATABASES['default']['ENGINE'] == 'mssql':
    from django.db.backends.signals import connection_created
    def activate_timezone(sender, connection, **kwargs):
        if connection.vendor == 'mssql':
            with connection.cursor() as cursor:
                cursor.execute("SET TIMEZONE = 'Asia/Jerusalem'")
    connection_created.connect(activate_timezone)