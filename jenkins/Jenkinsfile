pipeline {
    agent any

    environment {
        DB_NAME = 'test_db'
        DB_USER = 'jenkins_user'
        DB_PASS = 'jenkins_pass'
        DB_HOST = 'localhost'
        DB_PORT = '1433'
    }

    stages {
        stage('Checkout') {
            steps {
                echo 'Checking out source code from Git...'
                checkout scm
            }
        }

        stage('Build') {
            steps {
                echo 'Building the project...'
                sh 'python3 -m pip install --upgrade pip'
                sh 'python3 -m pip install -r requirements.txt'
                sh 'python3 -m pip install coverage junit-xml' // ודא שיש לך חבילות ל־JUnit XML
            }
        }

       stage('Test') {
    steps {
        echo 'Running Django unit and integration tests with coverage metrics...'

        sh '''
          export PATH=$HOME/.local/bin:$PATH
          coverage run --source=. manage.py test
          coverage report
          coverage xml
          coverage html
        '''

        script {
            try {
                junit 'reports/junit/*.xml'
            } catch (err) {
                echo "No JUnit XML reports found."
            }
        }

        publishCoverage adapters: [
            coberturaAdapter('coverage.xml')
        ], sourceFileResolver: sourceFiles('STORE_LAST_BUILD')

        archiveArtifacts artifacts: 'htmlcov/**', allowEmptyArchive: true
    }
}

        stage('Deploy') {
            steps {
                echo 'Deploying the application...'
                // הפעלת סקריפט פריסה אם יש
                // sh './deploy_script.sh'
            }
        }
    }

    post {
        always {
            echo 'Cleaning up workspace...'
            cleanWs()
        }
        success {
            echo 'Build and tests succeeded.'
        }
        failure {
            echo 'Build or tests failed.'
        }
    }
}
