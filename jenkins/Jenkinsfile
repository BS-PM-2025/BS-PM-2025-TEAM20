pipeline {
    agent any

    environment {
        // הוספת הנתיב של pip --user ל־PATH
        PATH = "${HOME}/.local/bin:${env.PATH}"

        // משתנה Django
        DJANGO_SETTINGS_MODULE = "djangoProject11.settings"

        // פתרון לבעיה של ModuleNotFoundError עבור mssql
        PYTHONUSERBASE = "${HOME}/.local"
        PYTHONPATH = "${HOME}/.local/lib/python3.10/site-packages:${env.PYTHONPATH}"
        // שימי לב: שנה את python3.10 אם את משתמשת בגרסה אחרת
    }
stage('Install Dependencies') {
    steps {
        sh '''
            echo "⬇️ Installing Microsoft ODBC Driver..."
            curl https://packages.microsoft.com/keys/microsoft.asc | sudo apt-key add -
            curl https://packages.microsoft.com/config/ubuntu/20.04/prod.list | sudo tee /etc/apt/sources.list.d/mssql-release.list
            sudo apt-get update
            sudo ACCEPT_EULA=Y apt-get install -y msodbcsql17
            echo "⬇️ Installing Python packages..."
            pip3 install --user --upgrade pip
            pip3 install --user -r requirements.txt
        '''
    }
}
    stages {
        stage('Checkout') {
            steps {
                checkout scm
            }
        }

        stage('Install Dependencies') {
            steps {
                sh '''
                    echo "⬇️ מתקין חבילות..."
                    pip3 install --user --upgrade pip
                    pip3 install --user -r requirements.txt
                '''
            }
        }

        stage('Check DB Engine') {
            steps {
                sh '''
                    echo "📦 בדיקת תקינות המנוע..."
                    grep ENGINE djangoProject11/settings.py || echo "⚠️ שים לב: ENGINE לא מוגדר בקובץ settings.py"
                '''
            }
        }

        stage('Run Migrations') {
            steps {
                sh '''
                    echo "🛠️ מריץ מיגרציות..."
                    PYTHONPATH=$PYTHONPATH python3 manage.py migrate
                '''
            }
        }

        stage('Run Tests') {
            steps {
                sh '''
                    echo "🧪 מריץ בדיקות..."
                    PYTHONPATH=$PYTHONPATH python3 manage.py test
                '''
            }
        }
    }

    post {
        success {
            echo '🎉 כל השלבים עברו בהצלחה!'
        }
        failure {
            echo '❌ יש שגיאה – בדוק את לוג Jenkins.'
        }
    }
}
