pipeline {
    agent any

    environment {
        PYTHONPATH = "${env.WORKSPACE}/.local/lib/python3.10/site-packages:${env.PYTHONPATH}"
        DJANGO_SETTINGS_MODULE = "djangoProject11.settings"
    }

    stages {
        stage('Checkout') {
            steps {
                checkout scm
            }
        }

        stage('Install Dependencies') {
            steps {
                sh '''
                    echo "Installing Python dependencies..."
                    python3 -m pip install --user --upgrade pip
                    python3 -m pip install --user -r requirements.txt
                '''
            }
        }

        stage('Database Setup') {
            steps {
                sh '''
                    echo "Setting up database..."
                    # הוספת מאגר החבילות של Microsoft
                    curl -s https://packages.microsoft.com/keys/microsoft.asc | sudo gpg --dearmor -o /usr/share/keyrings/microsoft-archive-keyring.gpg
                    echo "deb [arch=amd64 signed-by=/usr/share/keyrings/microsoft-archive-keyring.gpg] https://packages.microsoft.com/ubuntu/20.04/prod focal main" | sudo tee /etc/apt/sources.list.d/mssql-release.list
                    
                    # התקנת דרייבר ODBC
                    sudo apt-get update
                    sudo ACCEPT_EULA=Y apt-get install -y msodbcsql17 unixodbc-dev
                '''
            }
        }

        stage('Run Migrations') {
            steps {
                sh '''
                    echo "Running migrations..."
                    python3 manage.py migrate --no-input
                '''
            }
        }

        stage('Run Tests') {
            steps {
                sh '''
                    echo "Running tests..."
                    python3 manage.py test --no-input
                '''
            }
        }
    }

    post {
        always {
            archiveArtifacts artifacts: '**/migrations/*.py', allowEmptyArchive: true
        }
        success {
            echo 'Pipeline completed successfully!'
        }
        failure {
            echo 'Pipeline failed - check logs!'
        }
    }
}